% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_cases.R
\name{predict_cases}
\alias{predict_cases}
\title{Calculate Infectiousness}
\usage{
predict_cases(
  cases = NULL,
  rts = NULL,
  serial_interval = NULL,
  forecast_date = NULL,
  horizon = NULL,
  rdist = NULL
)
}
\arguments{
\item{cases}{A dataframe containing \code{date} and \code{cases} variables}

\item{rts}{A dataframe of containing two variables \code{rt} and  \code{date} with
\code{rt} being numeric and \code{date} being a date.}

\item{serial_interval}{A numeric vector describing the probability distribution the serial interval.
See \code{EpiNow::covid_serial_interval} for an example of the format.}

\item{forecast_date}{A character string date (format "yyyy-mm-dd") indicating
the forecast date. Defaults to \code{NULL} in which case it will be assumed that the
forecast date is the last data present in the \code{cases} dataframe}

\item{horizon}{Numeric, the time horizon over which to predict}

\item{rdist}{A function to be used to sample the number of cases. Must take two
arguments with the first specfying the number of samples and the second the mean. Defaults
to \code{rpois} if not supplied}
}
\value{
The infectiousness at the current time
}
\description{
Calculate Infectiousness
}
\examples{

## Observed cases
cases <- data.frame(date = seq(as.Date("2020-01-01"),
                               as.Date("2020-01-10"),
                               by = "days"),
                    cases = 1:10)

## Forecast Rts
rts <- data.frame(date = seq(as.Date("2020-01-01"),
                               as.Date("2020-01-20"),
                               by = "days"),
                   rt = rep(1.2, 20))

## Example serial interval
mean_si <- 4.7
sd_si <- 2.9

mu_log <- log(mean_si) - 1/2 * log((sd_si / mean_si)^2 + 1)
sd_log <- sqrt(log((sd_si/mean_si)^2 + 1))


serial_interval <- rlnorm(1:100, mu_log, sd_log) \%>\%
   round(0) \%>\%
   table \%>\%
   {. / sum(.)}

predict_cases(cases, rts, serial_interval)
}
