% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_models.R
\name{compare_models}
\alias{compare_models}
\title{Compare forecasting models}
\usage{
compare_models(
  obs_rts = NULL,
  obs_cases = NULL,
  models = NULL,
  horizon = 7,
  samples = 1000,
  bound_rt = TRUE,
  timeout = 30,
  serial_interval = NULL,
  min_points = 3,
  rdist = NULL
)
}
\arguments{
\item{obs_rts}{Dataframe of Rt observations to forecast with and score
against. Should contain a \code{date} and \code{rt} column. If multiple samples are included this
should be denoted using a numeric \code{sample} variable.}

\item{obs_cases}{Dataframe of case observations to use for case prediction and
scoring. Should contain a \code{date} and \code{cases} column. If multiple samples are included this
should be denoted using a numeric \code{sample} variable.}

\item{models}{A list of \code{bsts} models. An example configuration is given in the
examples. Each \code{bsts} model needs to be wrapped in a function that takes a \code{ss} and \code{y}
argument (i.e. \code{function(ss, y){bsts::AddSemilocalLinearTrend(ss, y = y)}}).}

\item{horizon}{Numeric, the time horizon over which to predict}

\item{samples}{Numeric, the number of samples to from the posterior of the model
fit. Note that twice this number of MCMC steps will be taken with half used as burn in.}

\item{bound_rt}{Logical, defaults to \code{TRUE}. Should Rt values be bounded to be greater than or
equal to 0.}

\item{timeout}{Numeric, the number of seconds to allow before terminating model fitting. Defaults to
30 seconds.}

\item{min_points}{Numeric, defaults to 3. The minimum number of time points at which to begin
iteratively evaluating the forecast.}
}
\value{
A list of dataframes as produced by \verb{evaluate model} but with an additional model column.
}
\description{
Compare forecasting models
}
\examples{

## List of forecasting bsts models wrapped in functions.
models <- list("AR 3" =
                    function(ss, y){bsts::AddAr(ss, y = y, lags = 3)},
               "Semi-local linear trend" =
                    function(ss, y){bsts::AddSemilocalLinearTrend(ss, y = y)})



## Compare models
evaluations <- compare_models(EpiSoon::example_obs_rts,
                              EpiSoon::example_obs_cases, models,
                              horizon = 7, samples = 10,
                              serial_interval = example_serial_interval)

## Example evaluation plot for comparing forecasts
## with actuals for a range of models and time horizons.
plot_forecast_evaluation(evaluations$forecast_rts, EpiSoon::example_obs_rts, c(1, 3, 7)) +
  ggplot2::facet_grid(model ~ horizon) +
  cowplot::panel_border()

## Hack to plot observed cases vs predicted
plot_forecast_evaluation(evaluations$forecast_cases,
                         EpiSoon::example_obs_cases, c(1, 3, 7)) +
  ggplot2::facet_wrap(model ~ horizon, scales = "free") +
  cowplot::panel_border()
}
